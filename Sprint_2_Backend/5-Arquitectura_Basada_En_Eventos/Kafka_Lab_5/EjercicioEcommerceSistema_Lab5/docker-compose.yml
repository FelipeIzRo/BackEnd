services:

  zookeeper:
    restart: always
    image: "docker.io/bitnami/zookeeper:3.8"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - "ALLOW_ANONYMOUS_LOGIN=yes"
    networks:
      - ecommerce

  kafka:
    restart: always
    image: "docker.io/bitnami/kafka:3.3"
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - ecommerce


  gestor_pedidos:
    build: 
      context: ./gestor_pedidos
    container_name: gestor_pedidos
    ports:
      - "5001:5001"
    depends_on:
      - kafka
    networks:
      - ecommerce

  gestor_inventario:
    build: 
      context: ./gestor_inventario
    container_name: gestor_inventario
    ports:
      - "5002:5002"
    depends_on:
      - kafka
    networks:
      - ecommerce
  
  orquestador:
    build: 
      context: ./orquestador
    container_name: orquestador
    ports:
      - "5003:5003"
    depends_on:
      - kafka
    networks:
      - ecommerce

volumes:
  kafka-volume:
  zookeeper-volume:

networks:
  ecommerce:
    driver: bridge
